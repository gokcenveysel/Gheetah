@{
    ViewData["Title"] = "Integration Guide";
}
<style>
    .gh-accordion {
        --gh-accordion-border: 1px solid #e2e8f0;
        --gh-accordion-radius: 8px;
        --gh-accordion-bg: #ffffff;
        --gh-accordion-hover-bg: #f8fafc;
        --gh-accordion-active-bg: #f1f5f9;
        --gh-accordion-color: #334155;
        --gh-accordion-active-color: #1e293b;
        --gh-accordion-padding: 1rem 1.5rem;
        --gh-accordion-icon-size: 24px;
        --gh-accordion-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .gh-accordion-item {
        border: var(--gh-accordion-border);
        border-radius: var(--gh-accordion-radius);
        background-color: var(--gh-accordion-bg);
        overflow: hidden;
        margin-bottom: 12px;
        transition: var(--gh-accordion-transition);
    }

    .gh-accordion-item:last-child {
        margin-bottom: 0;
    }

    .gh-accordion-item:hover {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border-color: #cbd5e1;
    }

    .gh-accordion-header {
        margin: 0;
    }

    .gh-accordion-button {
        display: flex;
        align-items: center;
        width: 100%;
        padding: var(--gh-accordion-padding);
        background-color: var(--gh-accordion-bg);
        color: var(--gh-accordion-color);
        border: none;
        text-align: left;
        cursor: pointer;
        transition: var(--gh-accordion-transition);
        gap: 12px;
    }

    .gh-accordion-button:hover {
        background-color: var(--gh-accordion-hover-bg);
    }

    .gh-accordion-button[aria-expanded="true"] {
        background-color: var(--gh-accordion-active-bg);
        color: var(--gh-accordion-active-color);
    }

    .gh-accordion-button[aria-expanded="true"] .gh-accordion-indicator {
        transform: rotate(180deg);
    }

    .gh-accordion-icon {
        width: var(--gh-accordion-icon-size);
        height: var(--gh-accordion-icon-size);
        flex-shrink: 0;
        color: #64748b;
    }

    .gh-accordion-title {
        flex-grow: 1;
        font-weight: 500;
        font-size: 0.95rem;
    }

    .gh-accordion-indicator {
        width: 20px;
        height: 20px;
        flex-shrink: 0;
        transition: var(--gh-accordion-transition);
        color: #64748b;
    }

    .gh-accordion-collapse {
        transition: var(--gh-accordion-transition);
    }

    .gh-accordion-body {
        padding: 0;
    }

    .gh-accordion-body pre {
        margin: 0;
        border-radius: 0;
        border: none;
        border-top: var(--gh-accordion-border);
        background-color: #f8fafc;
        padding: 1.5rem;
    }

    .card .gh-accordion {
        margin: 0;
    }

    .card .gh-accordion-item {
        border-radius: 0;
        border-left: none;
        border-right: none;
    }

    .card .gh-accordion-item:first-child {
        border-top: none;
    }

    .card .gh-accordion-item:last-child {
        border-bottom: none;
    }
    .gh-accordion {
        --gh-accordion-bg: #fff;
        --gh-accordion-active-bg: #f8f9fa;
        --gh-accordion-border: 1px solid rgba(0, 0, 0, 0.075);
        --gh-accordion-color: #495057;
        --gh-accordion-active-color: #1a1a1a;
        --gh-accordion-padding: 1.25rem 1.5rem;
        --gh-transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
    }

    .gh-accordion-item {
        background: var(--gh-accordion-bg);
        border: var(--gh-accordion-border);
        border-radius: 7px;
        margin-bottom: 0.75rem;
        overflow: hidden;
        transition: var(--gh-transition);
    }

    .gh-accordion-item:last-child {
        margin-bottom: 0;
    }

    .gh-accordion-item:hover {
        border-color: rgba(0, 0, 0, 0.125);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
    }

    .gh-accordion-header {
        margin: 0;
    }

    .gh-accordion-button {
        display: flex;
        align-items: center;
        width: 100%;
        padding: var(--gh-accordion-padding);
        background: var(--gh-accordion-bg);
        color: var(--gh-accordion-color);
        border: none;
        cursor: pointer;
        gap: 12px;
        transition: var(--gh-transition);
    }

    .gh-accordion-button:hover {
        background: var(--gh-accordion-active-bg);
        color: var(--gh-accordion-active-color);
    }

    .gh-accordion-button[aria-expanded="true"] {
        background: var(--gh-accordion-active-bg);
        color: var(--gh-accordion-active-color);
    }

    .gh-accordion-button[aria-expanded="true"] .gh-accordion-indicator {
        transform: rotate(180deg);
    }

    .gh-accordion-icon {
        width: 24px;
        height: 24px;
        flex-shrink: 0;
        color: #868e96;
    }

    .gh-accordion-title {
        flex-grow: 1;
        font-weight: 500;
        font-size: 0.9375rem;
    }

    .gh-accordion-indicator {
        width: 20px;
        height: 20px;
        flex-shrink: 0;
        transition: var(--gh-transition);
        color: #adb5bd;
    }

    .gh-accordion-collapse {
        transition: var(--gh-transition);
    }

    .gh-accordion-body {
        padding: 0;
    }

    .gh-accordion-body pre {
        margin: 0;
        border-radius: 0;
        border: none;
        border-top: var(--gh-accordion-border);
        background-color: #f8fafc;
        padding: 1.5rem;
    }

    .card .gh-accordion-item {
        border-left: none;
        border-right: none;
        border-radius: 0;
    }

    .card .gh-accordion-item:first-child {
        border-top: none;
    }

    .card .gh-accordion-item:last-child {
        border-bottom: none;
    }
</style>
<div class="container my-5">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-book me-2" width="32" height="32" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0" />
                            <path d="M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0" />
                            <path d="M3 6l0 13" />
                            <path d="M12 6l0 13" />
                            <path d="M21 6l0 13" />
                        </svg>
                        <h1 class="card-title mb-0">Gheetah Java-Cucumber Integration Guide</h1>
                    </div>
                    
                    <div class="alert alert-primary d-flex align-items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-info-circle me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
                            <path d="M12 9h.01" />
                            <path d="M11 12h1v4h1" />
                        </svg>
                        <div>
                            Welcome to the Gheetah Test Orchestration Platform! This guide explains how to set up and run Java-Cucumber projects with Gheetah, supporting both TestNG and JUnit 4 frameworks.
                        </div>
                    </div>

                    <div class="border-start border-3 border-primary ps-3 my-5">
                        <h2 class="mb-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-layout-dashboard me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M4 4h6v8h-6z" />
                                <path d="M4 16h6v4h-6z" />
                                <path d="M14 12h6v8h-6z" />
                                <path d="M14 4h6v4h-6z" />
                            </svg>
                            Overview
                        </h2>
                        <p>Gheetah automates Cucumber test execution by dynamically configuring Java projects. It supports:</p>
                        <ul class="list list-tick">
                            <li>TestNG and JUnit 4 frameworks</li>
                            <li>Dynamic TAG generation for scenarios in <code>.feature</code> files</li>
                            <li>Automatic project configuration via <code>JavaProjectConfigurator.cs</code></li>
                            <li>Selenium-based browser automation with Formy</li>
                            <li>Custom XML report generation via <code>CustomCucumberFormatter</code></li>
                            <li>Automatic cleanup of project directories and zip files</li>
                        </ul>
                    </div>

                    <h2 class="mt-5 mb-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-folders me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M9 4h3l2 2h5a2 2 0 0 1 2 2v7a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
                            <path d="M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2h2" />
                        </svg>
                        Project Structure
                    </h2>
                    <p>Your Java-Cucumber project should follow this structure for both TestNG and JUnit 4 projects:</p>
                    <div class="card card-sm mb-4">
                        <div class="card-body">
                            <pre><code class="language-plaintext">java-cucumber-[testng|junit4]-formy/
├── pom.xml (or build.gradle)
├── src/
│   ├── test/
│   │   ├── java/
│   │   │   ├── runner/
│   │   │   │   └── CucumberRunner.java
│   │   │   ├── steps/
│   │   │   │   ├── FormSteps.java
│   │   │   │   └── CustomCucumberFormatter.java
│   │   │   ├── utils/
│   │   │   │   └── TestBase.java
│   │   │   └── pages/
│   │   │       └── FormPage.java
│   │   └── resources/
│   │       └── features/
│   │           └── form.feature
└── testng.xml (for TestNG only)</code></pre>
                        </div>
                    </div>

                    <h2 class="mt-5 mb-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-tools me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M3 21h4l13 -13a1.5 1.5 0 0 0 -4 -4l-13 13v4" />
                            <path d="M14.5 5.5l4 4" />
                            <path d="M12 8l-5 -5l-4 4l5 5" />
                            <path d="M7 8l-1.5 1.5" />
                            <path d="M16 12l5 5l-4 4l-5 -5" />
                            <path d="M16 17l-1.5 1.5" />
                        </svg>
                        Setting Up Your Project
                    </h2>
                    <div class="mt-4">
                        <div class="d-flex align-items-center mb-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-java me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="#e74c3c" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M12.5 6c-.167 -.14 -2.5 1.5 -2.5 3.5c0 1.5 .5 3 2 3.5c-.5 1 -1.25 2 -2.5 2c1.25 1 3.25 1 4.5 0c1.25 -1 3 -3 3 -5s-1 -3 -3.5 -4z" />
                                <path d="M10.5 1c1.5 0 3 .5 4 2c1 1.5 1 4 0 5.5c-1 1.5 -2.5 2.5 -4.5 2.5c2 1 3.5 1 5.5 0c2 -1 3.5 -3 4 -5c.5 -2 -1 -3 -3 -3c-2 0 -4.5 1.5 -4.5 4c0 1.5 1.5 2 3 1.5v-5.5z" />
                            </svg>
                            <h3 class="mb-0">TestNG Project</h3>
                        </div>

                        <div class="gh-accordion" id="testngAccordion">
                            <div class="gh-accordion-item">
                                <h2 class="gh-accordion-header">
                                    <button class="gh-accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#pomContent" aria-expanded="true">
                                        <div class="gh-accordion-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                                <polyline points="14 2 14 8 20 8" />
                                                <path d="M10 13l-1 2 1 2" />
                                                <path d="M14 13l1 2-1 2" />
                                            </svg>
                                        </div>
                                        <span class="gh-accordion-title">pom.xml Configuration</span>
                                        <div class="gh-accordion-indicator">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M6 9l6 6 6-6" />
                                            </svg>
                                        </div>
                                    </button>
                                </h2>
                                <div id="pomContent" class="gh-accordion-collapse collapse show">
                                    <div class="gh-accordion-body">
                                        <pre><code class="language-xml">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;com.example&lt;/groupId&gt;
    &lt;artifactId&gt;java-cucumber-testng-formy&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

    &lt;properties&gt;
        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;
        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-testng&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-picocontainer&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.testng&lt;/groupId&gt;
            &lt;artifactId&gt;testng&lt;/artifactId&gt;
            &lt;version&gt;7.10.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hamcrest&lt;/groupId&gt;
            &lt;artifactId&gt;hamcrest&lt;/artifactId&gt;
            &lt;version&gt;2.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
            &lt;version&gt;2.0.16&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;
            &lt;artifactId&gt;selenium-java&lt;/artifactId&gt;
            &lt;version&gt;4.34.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.2.5&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;suiteXmlFiles&gt;
                        &lt;suiteXmlFile&gt;testng.xml&lt;/suiteXmlFile&gt;
                    &lt;/suiteXmlFiles&gt;
                    &lt;systemPropertyVariables&gt;
                        &lt;cucumber.filter.tags&gt;${cucumber.filter.tags}&lt;/cucumber.filter.tags&gt;
                    &lt;/systemPropertyVariables&gt;
                    &lt;reportsDirectory&gt;TestResults&lt;/reportsDirectory&gt;
                    &lt;properties&gt;
                        &lt;property&gt;
                            &lt;name&gt;listener&lt;/name&gt;
                            &lt;value&gt;org.testng.reporters.XMLReporter&lt;/value&gt;
                        &lt;/property&gt;
                    &lt;/properties&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;</code></pre>
                                    </div>
                                </div>
                            </div>

                            <div class="gh-accordion-item">
                                <h2 class="gh-accordion-header">
                                    <button class="gh-accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#runnerContent">
                                        <div class="gh-accordion-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M13 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
                                                <path d="M4 17l5 1l.75 -1.5" />
                                                <path d="M15 21l0 -4l-4 -3l1 -6" />
                                                <path d="M7 12l0 -3l5 -1l3 3l3 1" />
                                            </svg>
                                        </div>
                                        <span class="gh-accordion-title">CucumberRunner.java</span>
                                        <div class="gh-accordion-indicator">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M6 9l6 6 6-6" />
                                            </svg>
                                        </div>
                                    </button>
                                </h2>
                                <div id="runnerContent" class="gh-accordion-collapse collapse">
                                    <div class="gh-accordion-body">
                                        <pre><code class="language-java">package runner;

import io.cucumber.testng.AbstractTestNGCucumberTests;
import io.cucumber.testng.CucumberOptions;

@@CucumberOptions(
    features = "src/test/resources/features",
    glue = {"steps"},
    plugin = {"pretty", "steps.CustomCucumberFormatter"},
    monochrome = true
)
public class CucumberRunner extends AbstractTestNGCucumberTests {
}</code></pre>
                                    </div>
                                </div>
                            </div>

                            <div class="gh-accordion-item">
                                <h2 class="gh-accordion-header">
                                    <button class="gh-accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#testngXmlContent">
                                        <div class="gh-accordion-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                                <path d="M4 15l4 6" />
                                                <path d="M4 21l4 -6" />
                                                <path d="M19 15v6h3" />
                                                <path d="M19 21h3" />
                                            </svg>
                                        </div>
                                        <span class="gh-accordion-title">testng.xml</span>
                                        <div class="gh-accordion-indicator">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M6 9l6 6 6-6" />
                                            </svg>
                                        </div>
                                    </button>
                                </h2>
                                <div id="testngXmlContent" class="gh-accordion-collapse collapse">
                                    <div class="gh-accordion-body">
                                        <pre><code class="language-xml">&lt;!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd"&gt;
&lt;suite name="CucumberTestSuite"&gt;
    &lt;listeners&gt;
        &lt;listener class-name="org.testng.reporters.XMLReporter"/&gt;
    &lt;/listeners&gt;
    &lt;test name="CucumberTests"&gt;
        &lt;classes&gt;
            &lt;class name="runner.CucumberRunner"/&gt;
        &lt;/classes&gt;
    &lt;/test&gt;
&lt;/suite&gt;</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mt-4">
                        <div class="d-flex align-items-center mb-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-java me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="#3498db" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <path d="M12.5 6c-.167 -.14 -2.5 1.5 -2.5 3.5c0 1.5 .5 3 2 3.5c-.5 1 -1.25 2 -2.5 2c1.25 1 3.25 1 4.5 0c1.25 -1 3 -3 3 -5s-1 -3 -3.5 -4z" />
                                <path d="M10.5 1c1.5 0 3 .5 4 2c1 1.5 1 4 0 5.5c-1 1.5 -2.5 2.5 -4.5 2.5c2 1 3.5 1 5.5 0c2 -1 3.5 -3 4 -5c.5 -2 -1 -3 -3 -3c-2 0 -4.5 1.5 -4.5 4c0 1.5 1.5 2 3 1.5v-5.5z" />
                            </svg>
                            <h3 class="mb-0">JUnit 4 Project</h3>
                        </div>

                        <div class="gh-accordion" id="junitAccordion">
                            <div class="gh-accordion-item">
                                <h2 class="gh-accordion-header">
                                    <button class="gh-accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#junitPomContent" aria-expanded="true">
                                        <div class="gh-accordion-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                                <polyline points="14 2 14 8 20 8" />
                                                <path d="M10 13l-1 2 1 2" />
                                                <path d="M14 13l1 2-1 2" />
                                            </svg>
                                        </div>
                                        <span class="gh-accordion-title">pom.xml Configuration</span>
                                        <div class="gh-accordion-indicator">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M6 9l6 6 6-6" />
                                            </svg>
                                        </div>
                                    </button>
                                </h2>
                                <div id="junitPomContent" class="gh-accordion-collapse collapse show">
                                    <div class="gh-accordion-body">
                                        <pre><code class="language-xml">&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;com.example&lt;/groupId&gt;
    &lt;artifactId&gt;java-cucumber-junit4-formy&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

    &lt;properties&gt;
        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;
        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-picocontainer&lt;/artifactId&gt;
            &lt;version&gt;7.20.1&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;junit&lt;/groupId&gt;
            &lt;artifactId&gt;junit&lt;/artifactId&gt;
            &lt;version&gt;4.13.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hamcrest&lt;/groupId&gt;
            &lt;artifactId&gt;hamcrest&lt;/artifactId&gt;
            &lt;version&gt;2.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;
            &lt;version&gt;2.0.16&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.seleniumhq.selenium&lt;/groupId&gt;
            &lt;artifactId&gt;selenium-java&lt;/artifactId&gt;
            &lt;version&gt;4.34.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.2.5&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;systemPropertyVariables&gt;
                        &lt;cucumber.filter.tags&gt;${cucumber.filter.tags}&lt;/cucumber.filter.tags&gt;
                    &lt;/systemPropertyVariables&gt;
                    &lt;reportsDirectory&gt;TestResults&lt;/reportsDirectory&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;</code></pre>
                                    </div>
                                </div>
                            </div>

                            <div class="gh-accordion-item">
                                <h2 class="gh-accordion-header">
                                    <button class="gh-accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#junitRunnerContent">
                                        <div class="gh-accordion-icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M13 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
                                                <path d="M4 17l5 1l.75 -1.5" />
                                                <path d="M15 21l0 -4l-4 -3l1 -6" />
                                                <path d="M7 12l0 -3l5 -1l3 3l3 1" />
                                            </svg>
                                        </div>
                                        <span class="gh-accordion-title">CucumberRunner.java</span>
                                        <div class="gh-accordion-indicator">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <path d="M6 9l6 6 6-6" />
                                            </svg>
                                        </div>
                                    </button>
                                </h2>
                                <div id="junitRunnerContent" class="gh-accordion-collapse collapse">
                                    <div class="gh-accordion-body">
                                        <pre><code class="language-java">package runner;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@@RunWith(Cucumber.class)
@@CucumberOptions(
    features = "src/test/resources/features",
    glue = {"steps"},
    plugin = {"pretty", "steps.CustomCucumberFormatter"},
    monochrome = true
)
public class CucumberRunner {
}</code></pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mt-4">
                        <div class="d-flex align-items-center mb-3">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill="#02303A" d="M99.5 112.5H85.3c-.5 0-.8-.2-1.1-.5-3.2-4-6.7-7.7-10.9-10.6-2.1-1.5-4.3-2.8-6.8-3.5-2-.6-4.1-.9-6.2-.4-2.1.5-3.9 1.7-5.4 3.2-1.9 1.9-3.2 4.2-4.2 6.7-.6 1.5-1.1 3-1.6 4.5-.1.2-.1.4-.2.6H37.5c-.1-.6-.2-1.2-.3-1.9-.4-2-1-4-2-5.8-.7-1.4-1.6-2.6-2.8-3.6-1.3-1.1-2.8-1.7-4.5-1.7-1.3 0-2.4.5-3.5 1.2-1.5 1-2.7 2.3-3.6 3.8-1.4 2.2-2.2 4.7-2.9 7.2-.1.2-.1.5-.2.8H2.8c-.1-.7-.2-1.5-.3-2.2-.5-4.7-.8-9.4-.7-14.1.1-5.5.7-10.9 2-16.3C5 75 6.7 70.4 9.3 66.2c3.6-5.7 8.4-9.8 14.7-12.3.2-.1.3-.1.5-.2h.2l.3.6c1.8 4 3.7 7.9 6 11.5 1.4 2.3 3.4 4 5.9 4.8 2.7.9 5.3.6 7.9-.5 2.3-1 4.2-2.5 6-4.2 2.1-2 3.8-4.2 5.5-6.6.1-.1.1-.2.1-.3-.2.2-.4.4-.7.6-2.5 2.5-5.2 4.7-8.3 6.4-1.5.9-3.2 1.6-4.9 1.9-2.5.5-4.8.2-6.8-1.6-.8-.7-1.4-1.5-2-2.3-3-4.7-5.6-9.6-8-14.6-.5-1-.9-2-1-3.2-.2-1.7.3-3.2 1.5-4.5.9-.9 1.9-1.6 3.1-2.2 2.2-1.1 4.5-1.9 6.8-2.7 3.4-1.1 6.9-1.9 10.5-2.4 4.1-.6 8.3-.7 12.5-.2 9 .9 17 4.2 24.3 9.5 2.5 1.8 5.1 3.3 8.1 4.2 11.9 3.8 21.4-4.4 23.6-12.8.6-2.3.8-4.6-.1-6.8-1.3-3.4-3.6-6-7.3-7-2.8-.7-5.5-.4-8.1 1-.5.3-1 .5-1.5.7-1.2.4-2 .1-2.6-1-.8-1.4-1.4-2.8-2.1-4.3-.3-.6-.2-1.1.1-1.6.3-.7.8-1.2 1.4-1.7 1.5-1.2 3.3-2 5.3-2.4 4.9-1.1 9.5-.4 13.9 1.8 3.5 1.7 6.2 4.3 8.2 7.7 1.9 3.2 3.2 6.6 3.8 10.3.4 2.9.4 5.7.1 8.6-.6 5-2 9.7-4 14.3-2.6 6-5.6 11.8-9.3 17.2-1.8 2.6-3.7 5.1-5.5 7.6-1.9 2.7-3.8 5.4-5.2 8.4-1.9 3.9-3 7.9-3.4 12.2-.3 3.7-.1 7.3.5 11 .1.6.2 1 .2 1.4zm-8.2-51.4c.3 2.4-.5 4-2.7 4.9-1.6.6-3.6.1-4.6-1.3-1.6-2.1-1.1-4 .7-5.8-1.8-.6-3.6-1.2-5.3-1.7-.4 1-.6 2.5-.5 3.7.2 2.4 1.1 4.4 3.1 5.7 2.1 1.4 4.5 2 7 1.5 2.6-.5 4.6-2 6-4.2.3-.4.5-.8.5-1.4-1.4-.4-2.8-.9-4.2-1.4z" /></svg>
                            <h3 class="mb-0">Gradle Project (Optional)</h3>
                        </div>
                        
                        <div class="card card-sm">
                            <div class="card-body">
                                <pre><code class="language-groovy hljs">plugins {
    id 'java'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.cucumber:cucumber-java:7.20.1'
    testImplementation 'io.cucumber:cucumber-testng:7.20.1' // or 'cucumber-junit:7.20.1' for JUnit
    testImplementation 'io.cucumber:cucumber-picocontainer:7.20.1'
    testImplementation 'org.testng:testng:7.10.2' // or 'junit:junit:4.13.2' for JUnit
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'org.slf4j:slf4j-simple:2.0.16'
    implementation 'org.seleniumhq.selenium:selenium-java:4.34.0'
}

test {
    systemProperty 'cucumber.filter.tags', System.getProperty('cucumber.filter.tags')
    testLogging {
        showStandardStreams = true
    }
}</code></pre>
                            </div>
                        </div>
                        <p class="mt-3"><strong>Note:</strong> Replace <code>cucumber-testng</code> and <code>testng</code> with <code>cucumber-junit</code> and <code>junit</code> for JUnit projects.</p>
                    </div>

                    <h2 class="mt-5 mb-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-api me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M4 13h5" />
                            <path d="M12 16v-8h3a2 2 0 0 1 2 2v1a2 2 0 0 1 -2 2h-3" />
                            <path d="M20 8v8" />
                            <path d="M9 16v-5.5a2.5 2.5 0 0 0 -5 0v5.5" />
                        </svg>
                        Gheetah Agent Implementation
                    </h2>
                    <p>The Gheetah Agent uses <code>JavaScenarioExecutor.cs</code> to execute tests, generate XML reports, and clean up resources.</p>
                    
                    <div class="mt-4">
                        <div class="d-flex align-items-center mb-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-report me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2ecc71" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M17 17m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
                                <path d="M17 13v4h4" />
                                <path d="M12 3v4a1 1 0 0 0 1 1h4" />
                                <path d="M11.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v2m0 3v4" />
                            </svg>
                            <h3 class="mb-0">CustomCucumberFormatter.java</h3>
                        </div>
                        
                        <div class="card card-sm">
                            <div class="card-body">
                                <pre><code class="language-java">package steps;

import io.cucumber.plugin.ConcurrentEventListener;
import io.cucumber.plugin.event.*;
import java.io.*;
import java.nio.file.*;
import java.text.SimpleDateFormat;
import java.util.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CustomCucumberFormatter implements ConcurrentEventListener {
    private static final Logger logger = LoggerFactory.getLogger(CustomCucumberFormatter.class);
    private final List&lt;String&gt; stdOutMessages = new ArrayList&lt;&gt;();
    private String outputFilePath;
    private String scenarioTag;

    public CustomCucumberFormatter() {
        logger.info("Initializing CustomCucumberFormatter");
    }

    @@Override
    public void setEventPublisher(EventPublisher publisher) {
        logger.info("Setting event publisher for CustomCucumberFormatter");
        publisher.registerHandlerFor(TestCaseStarted.class, this::handleTestCaseStarted);
        publisher.registerHandlerFor(TestStepStarted.class, this::handleTestStepStarted);
        publisher.registerHandlerFor(TestStepFinished.class, this::handleTestStepFinished);
        publisher.registerHandlerFor(TestCaseFinished.class, this::handleTestCaseFinished);
    }

    private void handleTestCaseStarted(TestCaseStarted event) {
        TestCase testCase = event.getTestCase();
        scenarioTag = testCase.getTags().stream()
            .filter(tag -> tag.startsWith("@@"))
            .findFirst()
            .map(tag -> tag.substring(1))
            .orElse("UnknownTag");
        String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
        outputFilePath = String.format("TestResults/%s_%s_test_results.xml", scenarioTag, timestamp);
        stdOutMessages.clear();
        stdOutMessages.add("Scenario: " + testCase.getName());
        logger.info("Test case started: {}, Output file: {}", testCase.getName(), outputFilePath);
    }

    private void handleTestStepStarted(TestStepStarted event) {
        if (event.getTestStep() instanceof PickleStepTestStep step) {
            stdOutMessages.add(step.getStep().getKeyword() + step.getStep().getText());
            logger.info("Test step started: {}", step.getStep().getText());
        }
    }

    private void handleTestStepFinished(TestStepFinished event) {
        if (event.getTestStep() instanceof PickleStepTestStep step) {
            Status status = event.getResult().getStatus();
            String statusMessage = switch (status) {
                case PASSED -> "-> done: " + step.getStep().getText() + " (" + event.getResult().getDuration().toMillis() / 1000.0 + "s)";
                case FAILED -> "-> error: " + event.getResult().getError().getMessage();
                default -> "-> " + status.name().toLowerCase() + ": " + step.getStep().getText();
            };
            stdOutMessages.add(statusMessage);
            logger.info("Test step finished: {}", statusMessage);
        }
    }

    private void handleTestCaseFinished(TestCaseFinished event) {
        logger.info("Test case finished, writing XML report to: {}", outputFilePath);
        try {
            Files.createDirectories(Paths.get("TestResults"));
            logger.info("TestResults directory created or exists");
            try (PrintWriter writer = new PrintWriter(new FileWriter(outputFilePath))) {
                writer.println("&lt;Results xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\"&gt;");
                writer.println("    &lt;UnitTestResult&gt;");
                writer.println("        &lt;Output&gt;");
                writer.println("            &lt;StdOut&gt;" + String.join("\n", stdOutMessages) + "&lt;/StdOut&gt;");
                writer.println("        &lt;/Output&gt;");
                writer.println("    &lt;/UnitTestResult&gt;");
                writer.println("&lt;/Results&gt;");
                logger.info("XML report written successfully to: {}", outputFilePath);
            }
        } catch (IOException e) {
            logger.error("Failed to write XML report: {}", e.getMessage(), e);
            throw new RuntimeException("Failed to write XML report: " + e.getMessage(), e);
        }
    }
}</code></pre>
                            </div>
                        </div>
                        <p class="mt-3"><strong>Key Features:</strong></p>
                        <ul class="list list-tick">
                            <li>Generates XML reports in <code>TestResults/&lt;scenarioTag&gt;_&lt;timestamp&gt;_test_results.xml</code></li>
                            <li>Logs scenario steps, including failures</li>
                            <li>Ensures reports are generated even if tests fail</li>
                        </ul>
                    </div>

                    <div class="mt-5">
                        <h2>
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-tag me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M7.5 7.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
                                <path d="M3 6v5.172a2 2 0 0 0 .586 1.414l7.71 7.71a2.41 2.41 0 0 0 3.408 0l5.592 -5.592a2.41 2.41 0 0 0 0 -3.408l-7.71 -7.71a2 2 0 0 0 -1.414 -.586h-5.172a3 3 0 0 0 -3 3z" />
                            </svg>
                            Dynamic TAG Generation
                        </h2>
                        <p>Gheetah automatically adds unique TAGs to each scenario in <code>.feature</code> files (e.g., <code>@@SubmitTheFormyFormWithValidData_1234567890</code>). These TAGs are used to execute specific scenarios via Maven:</p>
                        <div class="card card-sm">
                            <div class="card-body">
                                <pre><code class="language-bash">mvn test -Dcucumber.filter.tags="@@SubmitTheFormyFormWithValidData_1234567890"</code></pre>
                            </div>
                        </div>
                        <p class="mt-3">Ensure your feature files are in <code>src/test/resources/features/</code>.</p>
                    </div>

                    <div class="mt-5">
                        <h2>
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-player-play me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M7 4v16l13 -8z" />
                            </svg>
                            Running Tests with Gheetah
                        </h2>
                        <ol class="list list-decimal">
                            <li><strong>Clone or Create a Project:</strong> Use one of our reference projects or set up your own</li>
                            <li><strong>Upload to Gheetah:</strong> Upload your project directory to the Gheetah platform</li>
                            <li><strong>Automatic Configuration:</strong> Gheetah will:
                                <ul class="list list-tick">
                                    <li>Detect project type (TestNG or JUnit 4)</li>
                                    <li>Update <code>pom.xml</code> with required dependencies</li>
                                    <li>Add dynamic TAGs to <code>.feature</code> files</li>
                                    <li>Inject <code>CustomCucumberFormatter</code> for XML report generation</li>
                                </ul>
                            </li>
                            <li><strong>Execute Tests:</strong> Select a scenario TAG from the Gheetah UI and run the test</li>
                            <li><strong>View Reports:</strong> XML reports are generated in <code>TestResults</code> and sent to the Gheetah platform</li>
                        </ol>
                    </div>

                    <div class="mt-5">
                        <h2>
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-alert-triangle me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="#e74c3c" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M12 9v4" />
                                <path d="M10.363 3.591l-8.106 13.534a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636 -2.87l-8.106 -13.536a1.914 1.914 0 0 0 -3.274 0z" />
                                <path d="M12 16h.01" />
                            </svg>
                            Troubleshooting
                        </h2>
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Issue</th>
                                        <th>Solution</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>TestNG.xml created for JUnit 4</td>
                                        <td>Ensure <code>pom.xml</code> includes <code>cucumber-junit</code></td>
                                    </tr>
                                    <tr>
                                        <td>Incorrect dependencies</td>
                                        <td>Verify <code>pom.xml</code> has correct dependencies</td>
                                    </tr>
                                    <tr>
                                        <td>Constructor errors</td>
                                        <td>Add <code>cucumber-picocontainer</code> to <code>pom.xml</code></td>
                                    </tr>
                                    <tr>
                                        <td>Tests not running</td>
                                        <td>Check <code>cucumber.filter.tags</code> configuration</td>
                                    </tr>
                                    <tr>
                                        <td>Test failures not generating XML</td>
                                        <td>Ensure <code>CustomCucumberFormatter</code> is included</td>
                                    </tr>
                                    <tr>
                                        <td>CDP warnings</td>
                                        <td>Update <code>selenium-java</code> to 4.34.0</td>
                                    </tr>
                                    <tr>
                                        <td>Connection errors</td>
                                        <td>Ensure Formy is accessible</td>
                                    </tr>
                                    <tr>
                                        <td>Process hangs</td>
                                        <td>Check <code>Gheetah_Agent.log</code> for timeouts</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="mt-5">
                        <div class="alert alert-info d-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-mail me-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
                                <path d="M3 7l9 6l9 -6" />
                            </svg>
                            <div>
                                <strong>Need help?</strong> Contact us at 
                                <a href="mailto:support@gheetah.com">support@gheetah.com</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .list-tick li::before {
            content: "✓";
            color: #2fb344;
            font-weight: bold;
            margin-right: 8px;
        }
        .list-decimal {
            list-style-type: decimal;
            padding-left: 1.5rem;
        }
        .list-decimal li {
            margin-bottom: 0.5rem;
        }
        .icon-tabler {
            stroke-width: 1.5;
        }
        pre {
            border-radius: 4px;
            padding: 16px;
            background: #f5f7fb;
        }
        .card-title {
            font-weight: 600;
        }
        .accordion-button {
            font-weight: 500;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof hljs !== 'undefined') {
                document.querySelectorAll('pre code').forEach((block) => {
                    hljs.highlightElement(block);
                });
            }
            
            document.querySelectorAll('.accordion-button').forEach(button => {
                button.addEventListener('click', () => {
                    const icon = button.querySelector('.accordion-icon');
                    if (icon) {
                        icon.classList.toggle('rotate-90');
                    }
                });
            });
        });
    </script>
}